{"version":3,"sources":["components/Background.jsx","components/CharacterSheet.jsx","App.jsx","index.js"],"names":["Background","props","_options","Object","assign","form","options","fixed","dataStatic","state","onDisplay","keys","bckgrndOp","handleBackgroundCycle","bind","handleSubSkill","handleSubmit","handleMultipleChoice","TemplateSkill","MultipleChoice","int","bgArray","this","position","indexOf","length","setState","event","index","value","target","data","skillMod","selection","newData","newType","skills","type","skillKey","subSkillKey","key","creditMod","moxie","moxieMod","rep","traits","onSelection","skillOption","fixedSkill","skillBonus","className","label","onChange","map","subKey","join","skillBouns","skillOptions","option","dsply","fixedSkills","onClick","description","mod","Component","staticData","playerName","id","characterName","subjectiveAge","objectiveAge","sleeve","default","aptitudesMods","cog","coo","ref","sav","som","wil","aptitudesMax","skillMods","animalHandling","cost","normal","climbing","gradeTwo","gradeThree","blades","background","drifter","undefined","at","c","e","f","g","i","r","fallEvacuee","hyperelite","isolate","lunarColonist","marsborn","oGSpaceColonist","reInstantiate","scumborn","uplift","faction","anarchist","argonaut","barsoomian","brinnker","criminal","extropian","hypercorp","academics","tags","aptitudeKey","art","beamWeapons","clubs","control","deception","demolitions","disguise","exoticMelee","exoticRanged","flight","fray","freeFall","freeRunning","gunnery","hardware","impersonatoin","infiltration","infoSec","interest","interfacing","intimidation","investigation","kinesice","kineticWeapons","language","medicine","navigation","networking","palming","perception","persuasion","pilot","profession","programming","protocol","psiAssault","psychosurgery","research","scrounging","seekerWeapons","sence","sprayWeapons","swimming","thrownWeapons","unarmedConbat","dynamicData","aptitudes","name","abbreviation","morphBonus","total","cp","skillsActive","skillsKnowledge","skillArrayByTag","tag","skillKeys","skillAry","forEach","push","console","warn","SimpleField","autoFocus","autoComplete","SimpleDropDown","item","Math","floor","random","toString","Aptitudes","dynamic","dataDynmic","maxApt","myData","alertStyle","fontWeight","color","min","max","step","aptKey","parseInt","reduce","a","b","spendPoints","handleChange","updateCP","style","Counter","pontsTotal","pontsSpent","Skills","totalePoinstSpent","SimpleSkill","rank","specialMod","aptMod","aptitude","morphMax","toUpperCase","subSkills","filter","_key","charSubSkills","handleNewSubSkill","thisSkill","bgOptions","factionOptions","characterSkills","skillList","mySkill","facOptions","CharacterSheet","handleInputChange","handleBackground","handleFaction","handleCP","change","attribute","newCP","newState","newSubSkill","skill","subSkill","isNum","apts","apt","sleeveBounse","newTotal","formMap","one","two","three","four","five","list","six","seven","keyOne","keyTwo","points","log","App","params","pages","page","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fa3e646.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nclass Background extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    const _options = Object.assign({}, this.props.form).options\r\n    \r\n    this.fixed = Object.assign({}, this.props.dataStatic) \r\n    this.form = Object.assign({}, this.props.form)\r\n    this.state = {\r\n      onDisplay: Object.keys(_options)[0],\r\n      bckgrndOp: _options[Object.keys(_options)[0]]\r\n    }\r\n\r\n    this.handleBackgroundCycle = this.handleBackgroundCycle.bind(this)\r\n    this.handleSubSkill = this.handleSubSkill.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.handleMultipleChoice = this.handleMultipleChoice.bind(this)\r\n    this.TemplateSkill = this.TemplateSkill.bind(this)\r\n    this.MultipleChoice = this.MultipleChoice.bind(this)\r\n  }\r\n\r\n  handleBackgroundCycle(int){\r\n    const bgArray = Object.keys(this.props.form.options)\r\n    let position = bgArray.indexOf(this.state.onDisplay)\r\n    if((position + int) < 0) position = bgArray.length - 1\r\n    else if((position + int) > (bgArray.length - 1)) position = 0\r\n    else position += int\r\n    this.setState({\r\n      onDisplay: bgArray[position],\r\n      bckgrndOp: this.props.form.options[bgArray[position]]\r\n    });\r\n  }\r\n\r\n  handleSubSkill(event, index){\r\n    const value = event.target.value \r\n    const data = this.state.bckgrndOp\r\n    data.skillMod[index].selection = value\r\n    this.setState({bckgrndOp: data})\r\n  }\r\n\r\n  handleMultipleChoice(event, index){\r\n    const value = event.target.value\r\n    if(value === 'SelectOne') return\r\n    const newData = this.state.bckgrndOp\r\n    const newType = (this.fixed.skills[value].options) ? 'templateSkill' : 'singleSkill'\r\n\r\n    newData.skillMod[index].type = newType\r\n    newData.skillMod[index].skillKey = value\r\n    newData.skillMod[index].subSkillKey = this.fixed.skills[value].options\r\n    if(this.fixed.skills[value].options)\r\n      newData.skillMod[index].selection = this.fixed.skills[value].options[0]\r\n\r\n    this.setState({bckgrndOp: newData})\r\n  }\r\n\r\n  handleSubmit(){\r\n    const key = this.state.onDisplay\r\n    const {skillMod, creditMod, moxieMod, rep, traits} = this.state.bckgrndOp\r\n    const data = {\r\n      key: key,\r\n      skillMod: skillMod,\r\n      creditMod: creditMod,\r\n      moxie: moxieMod,\r\n      rep: rep,\r\n      traits: traits\r\n    }\r\n    this.props.onSelection(data)\r\n  }\r\n\r\n  TemplateSkill(props){\r\n    const skillOption = props.skillOption\r\n    const index = props.index\r\n    const fixedSkill = props.fixedSkill\r\n    const skillBonus = props.skillBonus\r\n    const key = skillOption.skillKey\r\n    \r\n    if(skillOption.subSkillKey.length > 1){\r\n      return (\r\n        <span \r\n          className='char-bckgrnd__skill-line'\r\n          key={['skill', key, skillOption.subSkillKey[0]].join('_')}\r\n        >\r\n          <strong>\r\n            {fixedSkill.label}: \r\n            <select onChange={ event => this.handleSubSkill(event, index) }>\r\n              {skillOption.subSkillKey.map( subKey => {\r\n                return (\r\n                  <option value={subKey} key={['subSkill', key, subKey].join('_')} >\r\n                    {subKey}\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n          </strong>\r\n          <p> + {skillBonus}</p>\r\n        </span>\r\n      )  \r\n    }else{\r\n      return (\r\n        <span \r\n          className='char-bckgrnd__skill-line'\r\n          key={[skillOption.type, key].join('_')}\r\n        >\r\n          <div>\r\n            <strong>{fixedSkill.label}: </strong>\r\n            <em> {skillOption.subSkillKey[0]}</em>\r\n          </div>\r\n          <p> + {skillBonus}</p>\r\n        </span>\r\n      )  \r\n\r\n    }\r\n  }\r\n\r\n  MultipleChoice(props){\r\n    const skillBonus = props.skillBouns\r\n    const skillOptions = props.skillOptions\r\n    const index = props.index\r\n    return (\r\n      <span \r\n        className='char-bckgrnd__skill-line'\r\n        key={['MultipleChoice', skillOptions.join('_')].join('_')}\r\n      >\r\n        <strong>Select A Skill:</strong>\r\n        <select onChange={event => this.handleMultipleChoice(event, index)}>\r\n          <option value='SelectOne'>Select One</option>\r\n          {skillOptions.map( \r\n            option => <option value={option} key={['option', option, index].join('_')} >{option}</option> \r\n          )}\r\n        </select>\r\n        <p> + {skillBonus}</p>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  render(){\r\n    const dsply = this.state.bckgrndOp\r\n    const fixedSkills = this.fixed.skills\r\n    return(\r\n      <section className='char-bckgrnd'>\r\n        <h2>{this.form.label}</h2>\r\n\r\n        {/* Control to cycal between main catagoris */}\r\n        <span className='char-bckgrnd__main-selector'>\r\n          <button onClick={()=>this.handleBackgroundCycle(-1)}>&lt;</button>\r\n\r\n          {/* Catagory Title */}\r\n          <p>{dsply.label}</p>\r\n          <button onClick={()=>this.handleBackgroundCycle(1)}>&gt;</button>\r\n        </span>\r\n\r\n        {/* Description */}\r\n        <p>{dsply.description}</p>\r\n\r\n        {/* Skill Section with options */}\r\n        {dsply.skillMod.map( (skillOption, index) => {\r\n          const skillBonus = skillOption.mod\r\n\r\n          //if this option has multiple skills\r\n          if(skillOption.type === 'multiple'){\r\n            return (\r\n              <this.MultipleChoice \r\n                skillBouns={skillBonus}\r\n                skillOptions={skillOption.skillKey}\r\n                index={index}\r\n                key={['over-skill', 'multi-choice', index].join('_')}\r\n              />\r\n            )\r\n          \r\n          //if this option has one skill with sub skills\r\n          }else if(skillOption.type === 'templateSkill'){\r\n            return (\r\n              <this.TemplateSkill\r\n                skillOption={skillOption}\r\n                index={index}\r\n                fixedSkill={fixedSkills[skillOption.skillKey]}\r\n                skillBonus={skillBonus}\r\n                key={['over-skill', 'templateSkill', index].join('_')}\r\n              />\r\n            )\r\n\r\n          //if this option has one skill\r\n          }else{\r\n            const fixedSkill = this.fixed.skills[skillOption.skillKey]\r\n            return (\r\n              <span \r\n                className='char-bckgrnd__skill-line'\r\n                key={['skill', skillOption.skillKey].join('_')}\r\n              >\r\n                <strong>{fixedSkill.label}:</strong>\r\n                <p> + {skillBonus}</p>\r\n              </span>\r\n            )\r\n          }\r\n        })} \r\n        \r\n        {/* Starting Creds */}       \r\n        <span \r\n          className='char-bckgrnd__skill-line'\r\n        >\r\n          <strong>Addtional Credits:</strong>\r\n          <p>{dsply.creditMod}</p>\r\n        </span>\r\n\r\n        {/* Moxie */}  \r\n        <span \r\n          className='char-bckgrnd__skill-line'\r\n        >\r\n          <strong>Addtional Moxie:</strong>\r\n          <p>{dsply.moxieMod}</p>\r\n        </span>\r\n\r\n        {/* Trait Section with options */}\r\n        {/* Rep Section with options */}\r\n        {/* Apply Backgound */}\r\n        <button onClick={this.handleSubmit}>Apply This Backgound</button>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Background;","import React,{Component} from 'react';\r\nimport Background from './Background';\r\n//this data block will be dirved from the rule book and can not be altered by players\r\nconst staticData = {\r\n  playerName: {        \r\n    label: 'Player Name',\r\n    id: 'plynam01',\r\n    type: 'text',\r\n    value: ''\r\n  },\r\n  characterName: {        \r\n    label: 'Character Name',\r\n    id: 'charnam02',\r\n    type: 'text',\r\n    value: ''\r\n  },\r\n  subjectiveAge: {        \r\n    label: 'Subjective Age',\r\n    id: 'fisihghari65644f34s6',\r\n    type: 'text',\r\n    value: ''\r\n  },\r\n  objectiveAge: {        \r\n    label: 'Objective Age',\r\n    id: '45g45g3sadfg5f15s3',\r\n    type: 'text',\r\n    value: ''\r\n  },\r\n  sleeve: {        \r\n    label: 'Sleeve',\r\n    type: 'dropDown',\r\n    options: {\r\n      default: {\r\n        label: 'Select One',\r\n        aptitudesMods: {\r\n          cog: 0,\r\n          coo: 0,\r\n          int: 0,\r\n          ref: 0,\r\n          sav: 0,\r\n          som: 0,\r\n          wil: 0,\r\n        },\r\n        aptitudesMax: 25,\r\n        skillMods: {\r\n          animalHandling: 0,\r\n        },\r\n        cost: 0\r\n      }, \r\n      normal: {\r\n        label: 'Normal',\r\n        aptitudesMods: {\r\n          cog: 0,\r\n          coo: 0,\r\n          int: 0,\r\n          ref: 0,\r\n          sav: 0,\r\n          som: 0,\r\n          wil: 0,\r\n        },\r\n        aptitudesMax: 25,\r\n        skillMods: {\r\n          climbing: 0\r\n        },\r\n        cost: 0\r\n      }, \r\n      gradeTwo: {\r\n        label: 'Grade 2',\r\n        aptitudesMods: {\r\n          cog: 3,\r\n          coo: 0,\r\n          int: 0,\r\n          ref: 0,\r\n          sav: 0,\r\n          som: 3,\r\n          wil: 0,\r\n        },\r\n        aptitudesMax: 30,\r\n        skillMods: {\r\n          animalHandling: 0\r\n        },\r\n        cost: 10\r\n      }, \r\n      gradeThree: {\r\n        label: 'Grade 3',\r\n        aptitudesMods: {\r\n          cog: 5,\r\n          coo: 0,\r\n          int: 0,\r\n          ref: 0,\r\n          sav: 0,\r\n          som: 5,\r\n          wil: 0,\r\n        },\r\n        aptitudesMax: 40,\r\n        skillMods: {\r\n          blades: +10,\r\n        },\r\n        cost: 20\r\n      }, \r\n    }\r\n  },\r\n  background: {        \r\n    label: 'What is your history?',\r\n    type: 'background',\r\n    options: {\r\n      drifter: {\r\n        label: 'DRIFTER',\r\n        description: `You were raised with a social grouping that remained\r\n        on the move throughout the Sol system. This could\r\n        have been free traders, pirates, asteroid farmers,\r\n        scavengers, or just migrant workers. You are used to\r\n        roaming space travel between habitats and stations.`,\r\n        skillMod: [\r\n          { type: 'singleSkill'\r\n          , skillKey: 'navigation'\r\n          , subSkillKey: undefined\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'pilot'\r\n          , subSkillKey: ['Spacecraft']\r\n          , selection: 'Spacecraft'\r\n          , mod: 20 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey:\r\n            [ 'Autonomists', 'Criminals', 'Ecologists', 'Firewall'\r\n            , 'Hypercorps', 'Media', 'Scientists']\r\n          , selection: 'Autonomists'\r\n          , mod: 10 }\r\n        ],\r\n        rep: {\r\n          at: 50, c: 50,\r\n          e: 50, f: 50,\r\n          g: 50, i: 50,\r\n          r: 50\r\n        },\r\n        traits: 0,\r\n        moxieMod: 1,\r\n        creditMod: 5000\r\n      },\r\n      fallEvacuee: {\r\n        label: 'FALL EVACUEE',\r\n        description: `You were born and raised on Earth and evacuated\r\n        during the horrors of the Fall, leaving your old life\r\n        (and possibly your friends, family, and loved ones)\r\n        behind you. You were lucky enough to survive with\r\n        your body intact and continue to make a life for yourself\r\n        out in the system.`,\r\n        skillMod: [\r\n          { type: 'templateSkill'\r\n          , skillKey: 'pilot'\r\n          , subSkillKey: ['Groundcraft']\r\n          , selection: 'Groundcraft'\r\n          , mod: 20 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey:\r\n            [ 'Autonomists', 'Criminals', 'Ecologists', 'Firewall'\r\n            , 'Hypercorps', 'Media', 'Scientists']\r\n          , selection: 'Autonomists'\r\n          , mod: 20 }\r\n        ],\r\n        rep: {\r\n          at: 50, c: 50,\r\n          e: 50, f: 50,\r\n          g: 50, i: 50,\r\n          r: 50\r\n        },\r\n        traits: 0,\r\n        moxieMod: 2,\r\n        creditMod: 2500\r\n      },\r\n      hyperelite: {\r\n        label: 'HYPERELITE',\r\n        description: `You are privileged to have been raised as part of the\r\n        immortal upper class that rules many inner system\r\n        habitats and hypercorps. You were pampered with wealth and \r\n        influence that most people can only dream of.`,\r\n        skillMod: [\r\n          { type: 'singleSkill'\r\n          , skillKey: 'protocol'\r\n          , subSkillKey: undefined\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey: ['Hypercorp']\r\n          , selection: 'Hypercorp'\r\n          , mod: 20 },\r\n        ],\r\n        rep: {\r\n          at: 50, c: 50,\r\n          e: 50, f: 50,\r\n          g: 50, i: 50,\r\n          r: 50\r\n        },\r\n        traits: 0,\r\n        moxieMod: 1,\r\n        creditMod: 10000\r\n      },\r\n      isolate: {\r\n        label: 'ISOLATE',\r\n        description: `You were raised as part of a self-exiled grouping on\r\n        the fringes of the system. Whether raised as part of\r\n        a religious group, cult, social experiment, anti-tech\r\n        cell, or a group that just wanted to be isolated, you\r\n        spent most if not all of your upbringing isolated\r\n        from other factions.`,\r\n        skillMod: [\r\n          { type: 'multiple'\r\n          , skillKey: [\r\n            'animalHandling', 'beamWeapons', 'blades',\r\n            'climbing','clubs', 'constrol', 'deception',\r\n            'demolitions', 'disguise', 'exoticMelee',\r\n            'exoticRanged', 'flight', 'fray',\r\n            'freeFall', 'freeRunning', 'gunnery',\r\n            'hardware', 'impersonatoin', 'infiltration',\r\n            'infoSec', 'interfacing', 'intimidation',\r\n            'investigation', 'kinesice', 'kineticWeapons',\r\n            'medicine', 'networking', 'palming',\r\n            'perception', 'persuasion', 'pilot',\r\n            'programming', 'protocol', 'psiAssault',\r\n            'psychosurgery', 'research', 'scrounging',\r\n            'seekerWeapons', 'sence', 'sprayWeapons',\r\n            'swimming', 'thrownWeapons', 'unarmedConbat'\r\n          ]\r\n          , mod: 20 },\r\n          { type: 'multiple'\r\n          , skillKey: [\r\n            'animalHandling', 'beamWeapons', 'blades',\r\n            'climbing','clubs', 'constrol', 'deception',\r\n            'demolitions', 'disguise', 'exoticMelee',\r\n            'exoticRanged', 'flight', 'fray',\r\n            'freeFall', 'freeRunning', 'gunnery',\r\n            'hardware', 'impersonatoin', 'infiltration',\r\n            'infoSec', 'interfacing', 'intimidation',\r\n            'investigation', 'kinesice', 'kineticWeapons',\r\n            'medicine', 'networking', 'palming',\r\n            'perception', 'persuasion', 'pilot',\r\n            'programming', 'protocol', 'psiAssault',\r\n            'psychosurgery', 'research', 'scrounging',\r\n            'seekerWeapons', 'sence', 'sprayWeapons',\r\n            'swimming', 'thrownWeapons', 'unarmedConbat'\r\n          ]\r\n          , mod: 20 }\r\n        ],\r\n        rep: {\r\n          at: 40, c: 40,\r\n          e: 40, f: 40,\r\n          g: 40, i: 40,\r\n          r: 40\r\n        },\r\n        traits: 0,\r\n        moxieMod: 1,\r\n        creditMod: 2500\r\n      },\r\n      lunarColonist: {\r\n        label: 'LUNAR COLONIST',\r\n        description: `You experienced your childhood in one of the cramped\r\n        dome cities or underground stations on Luna, Earth’s\r\n        moon. You had a ringside seat to the Fall of Earth.`,\r\n        skillMod: [\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'pilot'\r\n          , subSkillKey: ['Groundcraft']\r\n          , selection: 'Groundcraft'\r\n          , mod: 10 },\r\n\r\n          { type: 'multiple'\r\n          , skillKey: \r\n            [ 'academic', 'demolitions', 'hardware', 'infosec'\r\n            , 'interfacing', 'medicine', 'profession', 'programming'\r\n            , 'psychosurgery', 'research']\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey: ['Hypercorps']\r\n          , selection: 'Hypercorps'\r\n          , mod: 20 }\r\n        ],\r\n        rep: {\r\n          at: 50, c: 50,\r\n          e: 50, f: 50,\r\n          g: 50, i: 50,\r\n          r: 50\r\n        },\r\n        traits: 0,\r\n        moxieMod: 1,\r\n        creditMod: 5000\r\n      },\r\n      marsborn: {\r\n        label: 'MARSBORN',\r\n        description: `You were raised in a station on or above Mars, now\r\n        the most populated planet in the system. Your home\r\n        town may or may not have survived the Fall.`,\r\n        skillMod: [\r\n          { type: 'templateSkill'\r\n          , skillKey: 'pilot'\r\n          , subSkillKey: ['Groundcraft']\r\n          , selection: 'Groundcraft'\r\n          , mod: 15 },\r\n\r\n          { type: 'multiple'\r\n          , skillKey: \r\n            [ 'academic', 'demolitions', 'hardware', 'infosec'\r\n            , 'interfacing', 'medicine', 'profession', 'programming'\r\n            , 'psychosurgery', 'research']\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey: ['Hypercorps']\r\n          , selection: 'Hypercorps'\r\n          , mod: 20 }\r\n        ],\r\n        rep: {\r\n          at: 50, c: 50,\r\n          e: 50, f: 50,\r\n          g: 50, i: 50,\r\n          r: 50\r\n        },\r\n        traits: 0,\r\n        moxieMod: 1,\r\n        creditMod: 5000\r\n      },\r\n      oGSpaceColonist: {\r\n        label: 'ORIGINAL SPACE COLONIST',\r\n        description: `You or your parents were part of the first “generations”\r\n        of colonists/workers sent out from Earth to stake a\r\n        claim in space, so you are familiar with the cramped\r\n        confines of spaceflight and life aboard older stations\r\n        and habitats. As a “zero-one g” (zero-gravity, firstgen),\r\n        you were never part of the elite. People from\r\n        your background typically have some sort of specialized\r\n        tech training as vacworkers or habtechs.`,\r\n        skillMod: [\r\n          { type: 'multiple'\r\n          , skillKey: ['pilot', 'freefall']\r\n          , mod: 10 },\r\n\r\n          { type: 'multiple'\r\n          , skillKey: \r\n            [ 'academic', 'demolitions', 'hardware', 'infosec'\r\n            , 'interfacing', 'medicine', 'profession', 'programming'\r\n            , 'psychosurgery', 'research']\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey:\r\n            [ 'Autonomists', 'Criminals', 'Ecologists', 'Firewall'\r\n            , 'Hypercorps', 'Media', 'Scientists']\r\n          , selection: 'Autonomists'\r\n          , mod: 20 }\r\n        ],\r\n        rep: {\r\n          at: 50, c: 50,\r\n          e: 50, f: 50,\r\n          g: 50, i: 50,\r\n          r: 50\r\n        },\r\n        traits: 0,\r\n        moxieMod: 1,\r\n        creditMod: 5000\r\n      },\r\n      reInstantiate: {\r\n        label: 'RE-INSTANTIATED',\r\n        description: `You were born and raised on Earth, but you did not\r\n        survive the Fall. All that you know is that your body\r\n        died there, but your backup was transmitted offworld,\r\n        and you were one of the lucky few to be re-instantiated\r\n        with a new morph. You may have spent years in dead\r\n        storage, simulspace, or as an infomorph slave.`,\r\n        skillMod: [\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'pilot'\r\n          , subSkillKey: ['Groundcraft']\r\n          , selection: 'Groundcraft'\r\n          , mod: 15 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey:\r\n            [ 'Autonomists', 'Criminals', 'Ecologists', 'Firewall'\r\n            , 'Hypercorps', 'Media', 'Scientists']\r\n          , selection: 'Autonomists'\r\n          , mod: 10 },\r\n        ],\r\n        rep: {\r\n          at: 50, c: 50,\r\n          e: 50, f: 50,\r\n          g: 50, i: 50,\r\n          r: 50\r\n        },\r\n        traits: ['editedMemories'],\r\n        moxieMod: 3,\r\n        creditMod: 0\r\n      },\r\n      scumborn: {\r\n        label: 'SCUMBORN',\r\n        description: `You were raised in the nomadic and chaotic lifestyle\r\n        common to scum barges. \"There is some lovely filth down here\" -Your Mom`,\r\n        skillMod: [\r\n          { type: 'multiple'\r\n          , skillKey: ['persuasion', 'deception']\r\n          , mod: 10 },\r\n\r\n          { type: 'singleSkill'\r\n          , skillKey: 'scrounging'\r\n          , subSkillKey: undefined\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey: [ 'Autonomists']\r\n          , selection: 'Autonomists'\r\n          , mod: 20 }\r\n\r\n        ],\r\n        rep: {\r\n          at: 50, c: 50,\r\n          e: 50, f: 50,\r\n          g: 50, i: 50,\r\n          r: 50\r\n        },\r\n        traits: 0,\r\n        moxieMod: 1,\r\n        creditMod: 5000\r\n      },\r\n      uplift: {\r\n        label: 'UPLIFT',\r\n        description: `You are not even human. You were born as an uplifted\r\n        animal: chimpanzee, gorilla, orangutan, parrot, raven,\r\n        crow, or octopus.`,\r\n        skillMod: [\r\n          { type: 'singleSkill'\r\n          , skillKey: 'fray'\r\n          , subSkillKey: undefined\r\n          , mod: 10 },\r\n\r\n          { type: 'singleSkill'\r\n          , skillKey: 'perception'\r\n          , subSkillKey: undefined\r\n          , mod: 10 },\r\n\r\n          { type: 'multiple'\r\n          , skillKey: ['academics', 'art', 'interest', 'language', 'profession']\r\n          , mod: 20 }\r\n        ],\r\n        rep: {\r\n          at: 50, c: 50,\r\n          e: 50, f: 50,\r\n          g: 50, i: 50,\r\n          r: 50\r\n        },\r\n        traits: 0,\r\n        moxieMod: 1,\r\n        creditMod: 5000\r\n      }\r\n    }\r\n  },\r\n  faction: {        \r\n    label: 'What Social Movement Do you Support?',\r\n    type: 'faction',\r\n    options: {\r\n      anarchist: {\r\n        label: 'ANARCHIST',\r\n\r\n        description: `You are opposed to hierarchy, favoring flat forms of\r\n        social organization and directly democratic decisionmaking.\r\n        You believe power is always corrupting and\r\n        everyone should have a say in the decisions that affect\r\n        their lives. According to the primitive and restrictive\r\n        policies of the inner system and Jovian Junta, this\r\n        makes you an irresponsible hoodlum at best and a terrorist\r\n        at worst. In your opinion, that’s comedy coming\r\n        from governments that keep their populations in line\r\n        with economic oppression and threats of violence.`,\r\n\r\n        skillMod: [\r\n          { type: 'multiple'\r\n          , skillKey: [\r\n            'animalHandling', 'beamWeapons', 'blades',\r\n            'climbing','clubs', 'constrol', 'deception',\r\n            'demolitions', 'disguise', 'exoticMelee',\r\n            'exoticRanged', 'flight', 'fray',\r\n            'freeFall', 'freeRunning', 'gunnery',\r\n            'hardware', 'impersonatoin', 'infiltration',\r\n            'infoSec', 'interfacing', 'intimidation',\r\n            'investigation', 'kinesice', 'kineticWeapons',\r\n            'medicine', 'networking', 'palming',\r\n            'perception', 'persuasion', 'pilot',\r\n            'programming', 'protocol', 'psiAssault',\r\n            'psychosurgery', 'research', 'scrounging',\r\n            'seekerWeapons', 'sence', 'sprayWeapons',\r\n            'swimming', 'thrownWeapons', 'unarmedConbat'\r\n          ]\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey: ['Autonomists']\r\n          , selection: 'Autonomists'\r\n          , mod: 30 }\r\n\r\n        ],\r\n        rep: {\r\n          at: 0, c: 0,\r\n          e: 0, f: 0,\r\n          g: 0, i: 0,\r\n          r: 0\r\n        },\r\n        traits: 0,\r\n        moxieMod: 0,\r\n        creditMod: 0\r\n      },\r\n      argonaut: {\r\n        label: 'ARGONAUT',\r\n\r\n        description: `You are part of a scientific technoprogressive movement\r\n        that seeks to solve transhumanity’s injustices and\r\n        inequalities with technology. You support universal\r\n        access to technology and healthcare, open-source\r\n        models of production, morphological freedom, and\r\n        democratization. You try to avoid factionalism and\r\n        divisive politics, seeing transhumanity’s splintering as\r\n        a hindrance to its perpetuation.`,\r\n\r\n        skillMod: [\r\n\r\n          { type: 'multiple'\r\n          , skillKey: \r\n            [ 'academic', 'demolitions', 'hardware', 'infosec'\r\n            , 'interfacing', 'medicine', 'profession', 'programming'\r\n            , 'psychosurgery', 'research']\r\n          , mod: 10 },\r\n\r\n          { type: 'multiple'\r\n          , skillKey: \r\n            [ 'academic', 'demolitions', 'hardware', 'infosec'\r\n            , 'interfacing', 'medicine', 'profession', 'programming'\r\n            , 'psychosurgery', 'research']\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey: ['Scientists']\r\n          , selection: 'Scientists'\r\n          , mod: 20 }\r\n\r\n        ],\r\n        rep: {\r\n          at: 0, c: 0,\r\n          e: 0, f: 0,\r\n          g: 0, i: 0,\r\n          r: 0\r\n        },\r\n        traits: 0,\r\n        moxieMod: 0,\r\n        creditMod: 0\r\n      },\r\n      barsoomian: {\r\n        label: 'BARSOOMIAN',\r\n\r\n        description: `You call the Martian outback and wilds your home. You are a\r\n        “redneck,” a lower-class Martian from the rural areas that often\r\n        find themselves in conflict with the policies and goals of the hypercorp\r\n        domes and Tharsis League.`,\r\n\r\n        skillMod: [\r\n          { type: 'singleSkill'\r\n          , skillKey: 'freeRunning'\r\n          , subSkillKey: undefined\r\n          , mod: 10 },\r\n\r\n          { type: 'multiple'\r\n          , skillKey: [\r\n            'animalHandling', 'beamWeapons', 'blades',\r\n            'climbing','clubs', 'constrol', 'deception',\r\n            'demolitions', 'disguise', 'exoticMelee',\r\n            'exoticRanged', 'flight', 'fray',\r\n            'freeFall', 'freeRunning', 'gunnery',\r\n            'hardware', 'impersonatoin', 'infiltration',\r\n            'infoSec', 'interfacing', 'intimidation',\r\n            'investigation', 'kinesice', 'kineticWeapons',\r\n            'medicine', 'networking', 'palming',\r\n            'perception', 'persuasion', 'pilot',\r\n            'programming', 'protocol', 'psiAssault',\r\n            'psychosurgery', 'research', 'scrounging',\r\n            'seekerWeapons', 'sence', 'sprayWeapons',\r\n            'swimming', 'thrownWeapons', 'unarmedConbat'\r\n          ]\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey: ['Autonomists']\r\n          , selection: 'Autonomists'\r\n          , mod: 20 }\r\n\r\n        ],\r\n        rep: {\r\n          at: 0, c: 0,\r\n          e: 0, f: 0,\r\n          g: 0, i: 0,\r\n          r: 0\r\n        },\r\n        traits: 0,\r\n        moxieMod: 0,\r\n        creditMod: 0\r\n      },\r\n      brinnker: {\r\n        label: 'BRINKER',\r\n\r\n        description: `You or your faction is reluctant to deal with the rest of the transhumanity\r\n        and the various goings-on in the rest of the system. Your\r\n        particular grouping may have sought out self-imposed isolation to\r\n        pursue their own interests, or they may have been exiled for their\r\n        unpopular beliefs. Or you may simply be a loner who prefers the\r\n        vast emptiness of space to socializing with others. You might be a\r\n        religious cultist, a primitivist, a utopian, or something altogether\r\n        uninterested in transhumanity.`,\r\n\r\n        skillMod: [\r\n          { type: 'templateSkill'\r\n          , skillKey: 'pilot'\r\n          , subSkillKey: [ 'Spacecraft']\r\n          , selection: 'Spacecraft'\r\n          , mod: 10 },\r\n\r\n          { type: 'multiple'\r\n          , skillKey: [\r\n            'animalHandling', 'beamWeapons', 'blades',\r\n            'climbing','clubs', 'constrol', 'deception',\r\n            'demolitions', 'disguise', 'exoticMelee',\r\n            'exoticRanged', 'flight', 'fray',\r\n            'freeFall', 'freeRunning', 'gunnery',\r\n            'hardware', 'impersonatoin', 'infiltration',\r\n            'infoSec', 'interfacing', 'intimidation',\r\n            'investigation', 'kinesice', 'kineticWeapons',\r\n            'medicine', 'networking', 'palming',\r\n            'perception', 'persuasion', 'pilot',\r\n            'programming', 'protocol', 'psiAssault',\r\n            'psychosurgery', 'research', 'scrounging',\r\n            'seekerWeapons', 'sence', 'sprayWeapons',\r\n            'swimming', 'thrownWeapons', 'unarmedConbat'\r\n          ]\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey:\r\n            [ 'Autonomists', 'Criminals', 'Ecologists', 'Firewall'\r\n            , 'Hypercorps', 'Media', 'Scientists']\r\n          , selection: 'Autonomists'\r\n          , mod: 20 }\r\n        ],\r\n\r\n        rep: {\r\n          at: 0, c: 0,\r\n          e: 0, f: 0,\r\n          g: 0, i: 0,\r\n          r: 0\r\n        },\r\n\r\n        traits: 0,\r\n        moxieMod: 0,\r\n        creditMod: 0\r\n      },\r\n      criminal: {\r\n        label: 'CRIMINAL',\r\n\r\n        description: `You are involved with the crime-oriented underworld. You may\r\n        work with one of the Sol system’s major criminal factions—triads,\r\n        the Night Cartel, the ID Crew, Nine Lives, Pax Familae—or one\r\n        of the smaller, local operators with a big stake in a specific habitat.\r\n        You might be a vetted member-for-life, a reluctant recruit, or just a\r\n        freelancer looking for the next gig.`,\r\n\r\n        skillMod: [\r\n          { type: 'singleSkill'\r\n          , skillKey: 'intimidation'\r\n          , subSkillKey: undefined\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey: ['Criminal']\r\n          , selection: 'Criminal'\r\n          , mod: 30 }\r\n        ],\r\n\r\n        rep: {\r\n          at: 0, c: 0,\r\n          e: 0, f: 0,\r\n          g: 0, i: 0,\r\n          r: 0\r\n        },\r\n\r\n        traits: 0,\r\n        moxieMod: 0,\r\n        creditMod: 0\r\n      },\r\n      extropian: {\r\n        label: 'EXTROPIAN',\r\n\r\n        description: `You are an anarchistic supporter of the free market and private\r\n        property. You oppose government and favor a system where security\r\n        and legal matters are handled by private competitors. Whether\r\n        you consider yourself an anarcho-capitalist or a mutualist (a difference\r\n        only other Extropians can figure out), you occupy a middle\r\n        ground between the hypercorps and autonomists, dealing with\r\n        both and yet trusted by neither.`,\r\n\r\n        skillMod: [\r\n          { type: 'singleSkill'\r\n          , skillKey: 'persuasion'\r\n          , subSkillKey: undefined\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey: ['Hypercorps']\r\n          , selection: 'Hypercorps'\r\n          , mod: 20 }\r\n        ],\r\n\r\n        rep: {\r\n          at: 0, c: 0,\r\n          e: 0, f: 0,\r\n          g: 0, i: 0,\r\n          r: 0\r\n        },\r\n        traits: 0,\r\n        moxieMod: 0,\r\n        creditMod: 0\r\n      },\r\n      hypercorp: {\r\n        label: 'HYPERCORP',\r\n\r\n        description: `You hail from a habitat controlled by the hypercorps. You might\r\n        be a hypercapitalist entrepeneur, a hedonistic socialite, or a lowly\r\n        vacworker, but you accept that certain liberties must be sacrificed\r\n        for security and freedom.`,\r\n\r\n        skillMod: [\r\n          { type: 'singleSkill'\r\n          , skillKey: 'protocol'\r\n          , subSkillKey: undefined\r\n          , mod: 10 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey: ['Hypercorps']\r\n          , selection: 'Hypercorps'\r\n          , mod: 20 },\r\n\r\n          { type: 'templateSkill'\r\n          , skillKey: 'networking'\r\n          , subSkillKey:\r\n            [ 'Autonomists', 'Criminals', 'Ecologists', 'Firewall'\r\n            , 'Hypercorps', 'Media', 'Scientists']\r\n          , selection: 'Autonomists'\r\n          , mod: 10 }\r\n        ],\r\n        \r\n        rep: {\r\n          at: 0, c: 0,\r\n          e: 0, f: 0,\r\n          g: 0, i: 0,\r\n          r: 0\r\n        },\r\n        traits: 0,\r\n        moxieMod: 0,\r\n        creditMod: 0\r\n      }   \r\n    }\r\n  },\r\n  skills: {\r\n    academics: {\r\n      label: 'Academics',\r\n      tags: ['Knowledge'],\r\n      aptitudeKey: 'cog',\r\n      options: [\r\n        'Archeology', 'Astrobiology', 'Astronomy',\r\n        'Astrophysics', 'Astrosociology', 'Biochemistry', \r\n        'Biology', 'Botany', 'Computer Science',\r\n        'Cryptography', 'Economics', 'Engineering',\r\n        'Genetics', 'Geology', 'Linguistics',\r\n        'Mathematics', 'Memetics', 'Nanotechnology',\r\n        'Old-Earth-History', 'Physics', 'Political-Science',\r\n        'Psychology', 'Sociology', 'Xeno-archeology',\r\n        'Xenolinguistics', 'Zoology'\r\n      ]\r\n    },\r\n    animalHandling: {\r\n      label: 'Animal Handling',\r\n      tags: ['Active', 'Social'],\r\n      aptitudeKey: 'sav'\r\n    },\r\n    art: {\r\n      label: 'Art',\r\n      aptitudeKey: 'int',\r\n      tags: ['Knowledge'],\r\n      options: [\r\n        'Architecture', 'Criticism', 'Dance',\r\n        'Drama', 'Drawing', 'Painting',\r\n        'Performance', 'Sculpture', 'Simulspace-Design',\r\n        'Singing', 'Speech', 'Writing'\r\n      ]\r\n    },\r\n    beamWeapons: {\r\n      label: 'Beam Weapons',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'coo'\r\n    },\r\n    blades: {\r\n      label: 'Blades',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'som'\r\n    },\r\n    climbing: {\r\n      label: 'Climbing',\r\n      tags: ['Active', 'Physical'],\r\n      aptitudeKey: 'som'\r\n    },\r\n    clubs: {\r\n      label: 'Clubs',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'som'\r\n    },\r\n    control: {\r\n      label: 'Control',\r\n      tags: ['Active', 'Mental', 'Psi'],\r\n      aptitudeKey: 'wil'\r\n    },\r\n    deception: {\r\n      label: 'Deception',\r\n      tags: ['Active', 'Social'],\r\n      aptitudeKey: 'sav'\r\n    },\r\n    demolitions: {\r\n      label: 'Demolitions',\r\n      tags: ['Active', 'Technical'],\r\n      aptitudeKey: 'cog'\r\n    },\r\n    disguise: {\r\n      label: 'Disguise',\r\n      tags: ['Active', 'Pysical'],\r\n      aptitudeKey: 'int'\r\n    },\r\n    exoticMelee: {\r\n      label: 'Exotic Melee',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'som',\r\n      options: ['Morning-Star', 'Spear', 'Whip']\r\n    },\r\n    exoticRanged: {\r\n      label: 'Exotic Ranged',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'coo',\r\n      options: ['Blowgun', 'Crossbow', 'Slingshot']\r\n    },\r\n    flight: {\r\n      label: 'Flight',\r\n      tags: ['Active', 'Physical'],\r\n      aptitudeKey: 'som'\r\n    },\r\n    fray: {\r\n      label: 'Fray',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'ref'\r\n    },\r\n    freeFall: {\r\n      label: 'Free Fall',\r\n      tags: ['Active', 'Physical'],\r\n      aptitudeKey: 'ref'\r\n    },\r\n    freeRunning: {\r\n      label: 'Freerunning',\r\n      tags: ['Active', 'Physical'],\r\n      aptitudeKey: 'som'\r\n    },\r\n    gunnery: {\r\n      label: 'Gunnery',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'int'\r\n    },\r\n    hardware: {\r\n      label: 'Hardware',\r\n      tags: ['Active', 'Technical'],\r\n      aptitudeKey: 'cog',\r\n      options: [\r\n        'Aerospace', 'Armorer', 'Electronics', 'Groundcraft', \r\n        'Implants', 'Industrial', 'Nautical', 'Robotics'\r\n      ]\r\n    },\r\n    impersonatoin: {\r\n      label: 'Impersonation',\r\n      tags: ['Active', 'Social'],\r\n      aptitudeKey: 'sav'\r\n    },\r\n    infiltration: {\r\n      label: 'Infiltration',\r\n      tags: ['Active', 'Physical'],\r\n      aptitudeKey: 'coo'\r\n    },\r\n    infoSec: {\r\n      label: 'Infosec',\r\n      tags: ['Active', 'Technical'],\r\n      aptitudeKey: 'cog'\r\n    },\r\n    interest: {\r\n      label: 'Interest',\r\n      tags: ['Knowledge'],\r\n      aptitudeKey: 'cog',\r\n      options: [\r\n        'Ancient_Sports', 'Celebrity_Gossip', 'Conspiracies',\r\n        'Factor_Trivia', 'Gambling', 'Hypercorp_Politics',\r\n        'Lunar_Habitats,', 'Martian_Beers', 'Old_Earth_Nation-States',\r\n        'Reclaimer_Blogs', 'Science_Fiction', 'Scum_Drug_Dealers',\r\n        'Spaceship_Models', 'Triad_Economics', 'Underground_XP'\r\n      ]\r\n    },\r\n    interfacing: {\r\n      label: 'Interfacing',\r\n      tags: ['Active', 'Technical'],\r\n      aptitudeKey: 'cog'\r\n    },\r\n    intimidation: {\r\n      label: 'Intimidation',\r\n      tags: ['Active', 'Social'],\r\n      aptitudeKey: 'sav'\r\n    },\r\n    investigation: {\r\n      label: 'Investigation',\r\n      tags: ['Active', 'Mental'],\r\n      aptitudeKey: 'int'\r\n    },\r\n    kinesice: {\r\n      label: 'Kinesics',\r\n      tags: ['Active', 'Social'],\r\n      aptitudeKey: 'sav'\r\n    },\r\n    kineticWeapons: {\r\n      label: 'Kinetic Weapons',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'coo'\r\n    },\r\n    language: {\r\n      label: 'Language',\r\n      tags: ['Knowledge'],\r\n      aptitudeKey: 'int',\r\n      options: [\r\n        'Arabic', 'Bangali', 'Cantonese', 'English',\r\n        'French', 'Hindi', 'Japanese',\r\n        'Mandarin', 'Portuguese', 'Russian',\r\n        'Spanish',\r\n      ]\r\n    },\r\n    medicine: {\r\n      label: 'Medicine',\r\n      aptitudeKey: 'cog',\r\n      tags: ['Active', 'Technical'],\r\n      options: [\r\n        'Biosculpting', 'Exotic-Biomorphs', 'Gene-Therapy,', 'General-Practice', \r\n        'Implant-Surgery', 'Nanomedicine', 'Paramedic', 'Pods', 'Psychiatry', 'Remote-Surgery', \r\n        'Trauma-Surgery', 'Uplifts', 'Veterinary'\r\n      ]\r\n    },\r\n    navigation: {\r\n      label: 'Navigation',\r\n      tags: ['Active', 'Mental'],\r\n      aptitudeKey: 'int'\r\n    },\r\n    networking: {\r\n      label: 'Networking',\r\n      tags: ['Active', 'Social'],\r\n      aptitudeKey: 'sav',\r\n      options: [\r\n        'Autonomists', 'Criminals', 'Ecologists', 'Firewall', \r\n        'Hypercorps', 'Media', 'Scientists'\r\n      ]\r\n    },\r\n    palming: {\r\n      label: 'Palming',\r\n      tags: ['Active', 'Physical'],\r\n      aptitudeKey: 'coo'\r\n    },\r\n    perception: {\r\n      label: 'Perception',\r\n      tags: ['Active', 'Mental'],\r\n      aptitudeKey: 'int'\r\n    },\r\n    persuasion: {\r\n      label: 'Persuasion',\r\n      tags: ['Active', 'Social'],\r\n      aptitudeKey: 'sav'\r\n    },\r\n    pilot: {\r\n      label: 'Pilot',\r\n      tags: ['Active', 'Vehicle'],\r\n      aptitudeKey: 'ref',\r\n      options: [\r\n        'Aircraft', 'Anthroform', 'Exotic-Vehicle', \r\n        'Groundcraft', 'Spacecraft', 'Watercraft'\r\n      ]\r\n    },\r\n    profession: {\r\n      label: 'Profession',\r\n      tags: ['Knowledge'],\r\n      aptitudeKey: 'cog',\r\n      options: [\r\n        'Accounting', 'Appraisal', 'Asteroid_Prospecting', 'Banking',\r\n        'Cool_Hunting', 'Con_Schemes', 'Distribution', 'Forensics', \r\n        'Lab_Technician', 'Mining', 'Police_Procedures', 'Psychotherapy', \r\n        'Security_Ops', 'Smuggling_Tricks', 'Social_Engineering', 'Squad_Tactics', \r\n        'Viral_Marketing', 'XP_Production'\r\n      ]\r\n    },\r\n    programming: {\r\n      label: 'Programming',\r\n      tags: ['Active', 'Technical'],\r\n      aptitudeKey: 'cog'\r\n    },\r\n    protocol: {\r\n      label: 'Protocol',\r\n      tags: ['Active', 'Social'],\r\n      aptitudeKey: 'sav'\r\n    },\r\n    psiAssault: {\r\n      label: 'Psi Assault',\r\n      tags: ['Active', 'Mental', 'Psi'],\r\n      aptitudeKey: 'wil'\r\n    },\r\n    psychosurgery: {\r\n      label: 'Psychosurgery',\r\n      tags: ['Active', 'Technical'],\r\n      aptitudeKey: 'int'\r\n    },\r\n    research: {\r\n      label: 'Research',\r\n      tags: ['Active', 'Technical'],\r\n      aptitudeKey: 'cog'\r\n    },\r\n    scrounging: {\r\n      label: 'Scrounging',\r\n      tags: ['Active', 'Mental'],\r\n      aptitudeKey: 'int'\r\n    },\r\n    seekerWeapons: {\r\n      label: 'Seeker Weapons',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'coo'\r\n    },\r\n    sence: {\r\n      label: 'Sence',\r\n      tags: ['Active', 'Mental', 'Psi'],\r\n      aptitudeKey: 'int'\r\n    },\r\n    sprayWeapons: {\r\n      label: 'Spray Weapons',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'coo'\r\n    },\r\n    swimming: {\r\n      label: 'Swimming',\r\n      tags: ['Active', 'Physical'],\r\n      aptitudeKey: 'som'\r\n    },\r\n    thrownWeapons: {\r\n      label: 'Thrown Weapons',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'coo'\r\n    },\r\n    unarmedConbat: {\r\n      label: 'Unarmed Combat',\r\n      tags: ['Active', 'Combat'],\r\n      aptitudeKey: 'som'\r\n    },\r\n  }\r\n}\r\n\r\n//this data black will be defined by the static date but the values will be set by user, saved to the DB, and then loard back.\r\nconst dynamicData = {\r\n  playerName: '',\r\n  characterName: '',\r\n  subjectiveAge: '',\r\n  objectiveAge: '',\r\n  aptitudes: {\r\n    cog: {name: 'Cognition', abbreviation: 'COG', value: 5, morphBonus: 0, total: 5},\r\n    coo: {name: 'Coordination', abbreviation: 'COO', value: 5, morphBonus: 0, total: 5},\r\n    int: {name: 'Intuition', abbreviation: 'INT', value: 5, morphBonus: 0, total: 5},\r\n    ref: {name: 'Reflexes', abbreviation: 'REF', value: 5, morphBonus: 0, total: 5},\r\n    sav: {name: 'Savvy', abbreviation: 'SAV', value: 5, morphBonus: 0, total: 5},\r\n    som: {name: 'Somatics', abbreviation: 'SOM', value: 5, morphBonus: 0, total: 5},\r\n    wil: {name: 'Willpower', abbreviation: 'WIL', value: 5, morphBonus: 0, total: 5}    \r\n  },\r\n  moxie: 0,\r\n  sleeve: 'default',\r\n  background: {\r\n    key: '',\r\n    skillMod: '',\r\n    creditMod: 0,\r\n    moxieMod: 0,\r\n    rep: {\r\n      at: 0, c: 0,\r\n      e: 0, f: 0,\r\n      g: 0, i: 0,\r\n      r: 0\r\n    },\r\n    traits: 0\r\n  },\r\n  faction: {\r\n    key: '',\r\n    skillMod: '',\r\n    creditMod: 0,\r\n    moxieMod: 0,\r\n    rep: {\r\n      at: 0, c: 0,\r\n      e: 0, f: 0,\r\n      g: 0, i: 0,\r\n      r: 0\r\n    },\r\n    traits: 0\r\n  },\r\n  skills: {\r\n  },\r\n  cp: {\r\n    aptitudes: 35,\r\n    skillsActive: 0,\r\n    skillsKnowledge: 0\r\n  }\r\n}\r\n\r\nfunction skillArrayByTag (tag) {\r\n  const skillKeys = Object.keys(staticData.skills)\r\n  const skillAry = []\r\n  skillKeys.forEach(skillKey => {\r\n    const skill = staticData.skills[skillKey]\r\n    if(skill.tags.indexOf(tag) !== -1) skillAry.push(skillKey)\r\n  });\r\n  if(skillAry.length <= 0) {\r\n    console.warn(\"skillArrayByTag() was unable to find and skills with tag \" + tag)\r\n  }else{\r\n    return skillAry\r\n  }\r\n}\r\n\r\nfunction keyGen() {\r\n  const num = Math.floor((Math.random() * 10000) + (Math.random() * 1000));\r\n  return num.toString();\r\n}\r\n\r\n//RPData Sub-Components\r\nfunction SimpleField (props) {\r\n  const autoFocus = (props.autoFocus) ? true : false;\r\n  const autoComplete = (props.autoComplete) ? 'on' : 'off';\r\n  return(\r\n    <label>\r\n      <p>{props.label}</p>\r\n      <input \r\n        type={props.type}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        autoComplete={autoComplete}\r\n        autoFocus={autoFocus}\r\n      ></input>\r\n    </label>\r\n  )\r\n}\r\n\r\nfunction SimpleDropDown (props){\r\n  return(\r\n    <label>\r\n      <p>{props.label}</p>\r\n      <select onChange={props.onChange} value={props.value}>\r\n        {Object.keys(props.options).map(key => {\r\n          const item = props.options[key];\r\n          return <option value={key} key={keyGen()}>{item.label}</option>\r\n        })}\r\n      </select>\r\n    </label>\r\n  )\r\n}\r\n\r\nfunction Aptitudes (props) {\r\n  const fixed = props.dataStatic;\r\n  const dynamic = props.dataDynmic;\r\n  function updateCP(event, key){\r\n    const value = event.target.value\r\n    const aptValArray = Object.keys(dynamic.aptitudes).map( aptKey => {\r\n      if(aptKey === key) return parseInt(value, 10)\r\n      else return parseInt(dynamic.aptitudes[aptKey].value, 10)\r\n    })\r\n    const total = aptValArray.reduce((a, b) => a + b)\r\n\r\n    props.spendPoints(total, 'aptitudes')\r\n    props.handleChange(event, key, 'value')\r\n  }\r\n  return(\r\n    <section className='character-aptitudes'>\r\n      {Object.keys(dynamic.aptitudes).map((key) => {\r\n        const maxApt = fixed.sleeve.options[dynamic.sleeve].aptitudesMax\r\n        const myData = dynamic.aptitudes[key];\r\n        let alertStyle = {fontWeight: 'normal', color: 'black'};\r\n        if(maxApt < myData.total){\r\n          alertStyle = {fontWeight: 'bold', color: 'red'};\r\n        }\r\n          \r\n        return (\r\n          <label \r\n            className='single-aptitude' \r\n            key={['aptitudes', key].join('_')} \r\n          >\r\n            <p className='tooltip'>\r\n              {myData.abbreviation}\r\n              <span className='tooltiptext'>{myData.name}</span>\r\n            </p>\r\n            <input\r\n              className='aptitudes-input'\r\n              type='number' \r\n              min='5' max='30' \r\n              value={myData.value}\r\n              step='1'\r\n              onChange={event => updateCP(event, key)}\r\n            />\r\n            <p>{myData.morphBonus}</p>\r\n            <p style={alertStyle}>{maxApt}</p>\r\n            <p>{myData.total}</p>\r\n          </label>            \r\n        )\r\n      } ) }\r\n\r\n      <label className='single-aptitude'>\r\n        <p>Aptitudes</p>\r\n        <p>Base Score</p>\r\n        <p>Sleeve Mod</p>\r\n        <p>Sleeve Max</p>\r\n        <p>Total</p>\r\n      </label>   \r\n    </section>\r\n  )\r\n}\r\n\r\nfunction Counter (props) {\r\n  const pontsTotal = props.pontsTotal\r\n  const pontsSpent = props.pontsSpent\r\n  const style = { color: 'black'}\r\n  if(pontsSpent > pontsTotal) Object.assign( style, {color: 'red', fontWeight: 'bold'})\r\n  return (\r\n    <div className='Char-Builder_Point-Counter'>\r\n      <strong>Points Spent:</strong>\r\n      <p style={style}>{pontsSpent}</p>\r\n      <p> / </p>\r\n      <p>{pontsTotal}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Skills extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.totalePoinstSpent = 0\r\n    this.SimpleSkill = this.SimpleSkill.bind(this)\r\n    this.TemplateSkill = this.TemplateSkill.bind(this)\r\n  }\r\n  SimpleSkill(props){\r\n    const dataDynmic = props.dataDynmic\r\n    const dataStatic = props.dataStatic\r\n    const fixedSkill = props.fixedSkill\r\n    const rank = props.rank\r\n    const skillKey = props.skillKey\r\n    const specialMod = props.specialMod\r\n\r\n    const aptMod = (()=>{\r\n      const aptitude = dataDynmic.aptitudes[fixedSkill.aptitudeKey].total\r\n      const morphMax = dataStatic.sleeve.options[dataDynmic.sleeve].aptitudesMax\r\n      return (aptitude > morphMax) ? morphMax : aptitude\r\n    })()\r\n    const total = rank + aptMod + specialMod\r\n  \r\n    return (\r\n      <label \r\n        className='skill_row'\r\n        key={['skill', skillKey].join('_')}\r\n      >\r\n        <p className='skill_text' >\r\n          {fixedSkill.label}\r\n        </p>\r\n        <p className='skill_cell' >{fixedSkill.aptitudeKey.toUpperCase()}</p>\r\n        <p className='skill_cell' >{total}</p>\r\n        <input\r\n          className='skill_input'\r\n          type='number'\r\n          min='0' max={80 - aptMod - specialMod}\r\n          value={rank}\r\n          step='5'\r\n          onChange={event => props.handleChange(event, skillKey)}\r\n          key={['skill', skillKey, 'input'].join('_')}\r\n        />\r\n        <p className='skill_cell' >{aptMod}</p>\r\n        <p className='skill_cell' >{specialMod}</p>\r\n      </label>\r\n    )      \r\n  }\r\n  TemplateSkill(props){\r\n    const dataDynmic = props.dataDynmic\r\n    const dataStatic = props.dataStatic\r\n    const fixedSkill = props.fixedSkill\r\n    const skillKey = props.skillKey\r\n    const subSkills = fixedSkill.options.filter( _key => {\r\n      let charSubSkills = dataDynmic.skills[skillKey]\r\n      if(charSubSkills){\r\n        charSubSkills = charSubSkills[_key]\r\n        if(charSubSkills >= 0) return true\r\n      }\r\n      return false\r\n    })\r\n    \r\n    return (\r\n      <>\r\n        <label\r\n          className='skill_row'\r\n          key={['skill', skillKey].join('_')}\r\n        >\r\n          <div className='skill_template-label' >\r\n            <p className='skill_text' >\r\n              {fixedSkill.label}: \r\n            </p>\r\n            <select value='default' onChange={(event) => props.handleNewSubSkill( event, skillKey )}>\r\n                <option value='default'>Select One</option>\r\n              {fixedSkill.options.map( option => {\r\n                return( \r\n                  <option value={option} key={['option', skillKey, option ].join('_')}>\r\n                    {option}\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n          </div>\r\n          <p className='skill_cell' >{fixedSkill.aptitudeKey.toUpperCase()}</p>\r\n          <p className='skill_cell' />\r\n          <p className='skill_cell' />\r\n          <p className='skill_cell' />\r\n          <p className='skill_cell' />\r\n        </label>\r\n        {subSkills.map( subSkillKey => {\r\n          const thisSkill = {label: `${fixedSkill.label}: ${subSkillKey}`, aptitudeKey:fixedSkill.aptitudeKey}\r\n          const rank = dataDynmic.skills[skillKey][subSkillKey]\r\n\r\n          const specialMod = (()=>{          \r\n            const backgroundSkillData = (()=>{\r\n              const bgOptions = props.dataDynmic.background.skillMod\r\n              for(let i = 0; i < bgOptions.length; i++ ){\r\n                if(bgOptions[i].selection === subSkillKey){\r\n                  return bgOptions[i].mod\r\n                }\r\n              }\r\n              return 0\r\n            })()\r\n            const factionSkillData = (()=>{\r\n              const factionOptions = props.dataDynmic.faction.skillMod\r\n              for(let i = 0; i < factionOptions.length; i++ ){\r\n                if(factionOptions[i].selection === subSkillKey){\r\n                  return factionOptions[i].mod\r\n                }\r\n              }\r\n              return 0\r\n            })()\r\n            return backgroundSkillData + factionSkillData\r\n          })()\r\n\r\n          return(\r\n            <this.SimpleSkill\r\n              fixedSkill={thisSkill}\r\n              rank={rank}\r\n              skillKey={subSkillKey}\r\n              specialMod={specialMod}\r\n              dataStatic={dataStatic}\r\n              dataDynmic={dataDynmic}\r\n              handleChange={(event, subKey) => props.handleChange(event, skillKey, subKey)}\r\n              key={['over-skill', skillKey, subSkillKey].join('_')}\r\n            />\r\n          )          \r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  componentDidUpdate(){\r\n    const characterSkills = this.props.dataDynmic.skills\r\n    const totalValues = skillKey => {\r\n      if(characterSkills[skillKey]){\r\n        const mySkill = characterSkills[skillKey]\r\n        if('number' === (typeof mySkill)){\r\n          //return simpleSkill value\r\n          if(mySkill > 60) return ((mySkill - 60) * 2) + 60\r\n          return mySkill\r\n        }else{\r\n          //return all subSkill values as a single value\r\n          return Object.keys(mySkill)\r\n          .map( subSkillKey => {\r\n            if(mySkill[subSkillKey] > 60) return ((mySkill[subSkillKey] - 60) * 2) + 60\r\n            return mySkill[subSkillKey]\r\n          }).reduce((a,b)=> a + b )\r\n        }\r\n      }else{\r\n        return 0\r\n      }\r\n    }\r\n    const simplSkillArray = this.props.skillList.map(totalValues)\r\n    const total = simplSkillArray.reduce((a, b) => a + b)\r\n    if(total !== this.totalePoinstSpent){\r\n      this.totalePoinstSpent = total\r\n      this.props.spendPoints(total)\r\n    }\r\n  }\r\n  render(){\r\n    const skillList = this.props.skillList\r\n    const dataDynmic = this.props.dataDynmic\r\n    return(\r\n      <section className='skill_block' >\r\n        <label \r\n          className='skill_row skill_header'          \r\n          key={['over-skill', 'header'].join('_')}\r\n        >\r\n          <p className='skill_text' >Skill Name</p>\r\n          <p className='skill_cell' >Aptitude</p>\r\n          <p className='skill_cell' >Total</p>\r\n          <p className='skill_cell' >Ranks</p>\r\n          <p className='skill_cell' >Apt. Mod</p>\r\n          <p className='skill_cell' >Special Bonuses</p>\r\n        </label>\r\n        {skillList.map( skillKey => {\r\n          const fixedSkill = this.props.dataStatic.skills[skillKey];\r\n\r\n          //If Normal Skill then render a SimpleSkill\r\n          if(!fixedSkill.options){\r\n            const rank = (dataDynmic.skills[skillKey]) ? dataDynmic.skills[skillKey] : 0\r\n            const specialMod = (()=>{\r\n              let total = 0\r\n              const bgOptions = dataDynmic.background.skillMod\r\n              for(let i = 0; i < bgOptions.length; i++ ){\r\n                if(bgOptions[i].skillKey === skillKey){\r\n                  total += bgOptions[i].mod\r\n                }\r\n              }\r\n              const facOptions = dataDynmic.faction.skillMod\r\n              for(let i = 0; i < facOptions.length; i++ ){\r\n                if(facOptions[i].skillKey === skillKey){\r\n                  total += facOptions[i].mod\r\n                }\r\n              }\r\n              return total\r\n            })()\r\n            return(\r\n              <this.SimpleSkill\r\n                fixedSkill={fixedSkill}\r\n                rank={rank}\r\n                skillKey={skillKey}\r\n                specialMod={specialMod}\r\n                dataStatic={this.props.dataStatic}\r\n                dataDynmic={dataDynmic}\r\n                handleChange={this.props.handleChange}\r\n                key={['over-skill', skillKey].join('_')}\r\n              />\r\n            )\r\n          }//Otherwise its a TemplateSkill \r\n          else{\r\n            return(\r\n              <this.TemplateSkill \r\n                fixedSkill={fixedSkill}\r\n                skillKey={skillKey}\r\n                dataStatic={this.props.dataStatic}\r\n                dataDynmic={dataDynmic}\r\n                handleChange={this.props.handleChange}\r\n                handleNewSubSkill={this.props.handleNewSubSkill}\r\n                key={['over-skill', skillKey].join('_')}\r\n              />\r\n            )\r\n          }\r\n        })}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nclass CharacterSheet extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = dynamicData\r\n    this.staticData = staticData\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this)\r\n    this.handleNewSubSkill = this.handleNewSubSkill.bind(this)\r\n    this.handleBackground = this.handleBackground.bind(this)\r\n    this.handleFaction = this.handleFaction.bind(this)\r\n    this.handleCP = this.handleCP.bind(this)\r\n  }\r\n\r\n  handleCP(change, attribute){\r\n    const newCP = this.state.cp\r\n    newCP[attribute] = change\r\n    this.setState({cp: newCP})\r\n  }\r\n\r\n  handleBackground(data){\r\n    const {key, skillMod, creditMod, moxie, rep, traits} = data\r\n\r\n    //add new data to state\r\n    const newState = this.state\r\n    newState.background = {\r\n      key: key,\r\n      skillMod: skillMod,\r\n      creditMod: creditMod,\r\n      moxie: moxie,\r\n      rep: {\r\n        at: rep.at, c: rep.c,\r\n        e: rep.e, f: rep.f,\r\n        g: rep.g, i: rep.i,\r\n        r: rep.r\r\n      },\r\n      traits: traits\r\n    }\r\n\r\n    //Subskills will not be displayed if the are not set to a min of Zero in Dynamic Data\r\n    //so in order for sub skills with background mods to be displayed they need to be set to zero\r\n    skillMod.forEach( option => {\r\n      const skillKey = option.skillKey\r\n      const fixedSkill = this.staticData.skills[skillKey]\r\n      //if the skill \r\n      if(fixedSkill.options){\r\n        const subSkillKey = option.selection\r\n        //if the character does not have the currnent option's skill\r\n        if(!newState.skills[skillKey]){\r\n          //...then create it\r\n          const newSubSkill = new Object\r\n          newSubSkill[subSkillKey] = 0\r\n          newState.skills[skillKey] = newSubSkill\r\n        }else{\r\n          //if the character does have the currnent option's skill, then check for the subskill\r\n          if(newState.skills[skillKey][subSkillKey] >= 0){\r\n            //if the character has the subskill the return\r\n            return\r\n          }else{\r\n            //...otherwise create it at 0\r\n            newState.skills[skillKey][subSkillKey] = 0\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    this.setState(newState)\r\n  }\r\n\r\n  handleFaction(data){\r\n    const {key, skillMod, creditMod, moxie, rep, traits} = data\r\n\r\n    //add new data to state\r\n    const newState = this.state\r\n    newState.faction = {\r\n      key: key,\r\n      skillMod: skillMod,\r\n      creditMod: creditMod,\r\n      moxie: moxie,\r\n      rep: {\r\n        at: rep.at, c: rep.c,\r\n        e: rep.e, f: rep.f,\r\n        g: rep.g, i: rep.i,\r\n        r: rep.r\r\n      },\r\n      traits: traits\r\n    }\r\n\r\n    //Subskills will not be displayed if the are not set to a min of Zero in Dynamic Data\r\n    //so in order for sub skills with background mods to be displayed they need to be set to zero\r\n    skillMod.map( option => {\r\n      const skillKey = option.skillKey\r\n      const fixedSkill = this.staticData.skills[skillKey]\r\n      //if the skill \r\n      if(fixedSkill.options){\r\n        const subSkillKey = option.selection\r\n        //if the character does not have the currnent option's skill\r\n        if(!newState.skills[skillKey]){\r\n          //...then create it\r\n          const newSubSkill = {}\r\n          newSubSkill[subSkillKey] = 0\r\n          newState.skills[skillKey] = newSubSkill\r\n        }else{\r\n          //if the character does have the currnent option's skill, then check for the subskill\r\n          if(newState.skills[skillKey][subSkillKey] >= 0){\r\n            //if the character has the subskill the return\r\n            return\r\n          }else{\r\n            //...otherwise create it at 0\r\n            newState.skills[skillKey][subSkillKey] = 0\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    this.setState(newState)\r\n  }\r\n\r\n  handleNewSubSkill(event, skill){\r\n    const subSkill = event.target.value\r\n    const data = this.state\r\n    if(data.skills[skill]){\r\n      if(data.skills[skill][subSkill] >= 0){\r\n        return\r\n      }else{\r\n        data.skills[skill][subSkill] = 0\r\n      }\r\n    }else{\r\n      data.skills[skill] = {}\r\n      data.skills[skill][subSkill] = 0\r\n    }\r\n    this.setState(data)\r\n  }\r\n\r\n  handleInputChange(event, ...keys){\r\n    const isNum = parseInt(event.target.value, 10);\r\n    // const isObj = JSON.parse(event.target.value);\r\n    let value = event.target.value;\r\n    if (isNum || isNum === 0) value = isNum;\r\n    // else if (isObj) value = isObj;\r\n    let newState = this.state;\r\n    for(let i = 0, state = newState; i < keys.length; i++){\r\n      if(!keys[(i + 1)]) {\r\n        state[keys[i]] = value;\r\n        break\r\n      }else{\r\n        state = state[keys[i]];\r\n      }\r\n    }\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    //Calc Total for Apts\r\n    const apts = this.state.aptitudes\r\n    Object.keys(apts).forEach( key => {\r\n      const apt = apts[key];\r\n      let morphBonus = apt.morphBonus;\r\n      const sleeveBounse = this.staticData.sleeve.options[this.state.sleeve].aptitudesMods[key];\r\n      const state = this.state;\r\n      let change = false;\r\n      \r\n      //check for new sleeve bounses\r\n      if(morphBonus !== sleeveBounse){\r\n        state.aptitudes[key].morphBonus = sleeveBounse;        \r\n        morphBonus = sleeveBounse;\r\n        change = true;\r\n      }\r\n      \r\n      const baseApt = apt.value;\r\n      const total = apt.total;\r\n      const newTotal = baseApt + morphBonus;\r\n\r\n      //check for new apts totals;\r\n      if(total !== newTotal){\r\n        state.aptitudes[key].total = newTotal;\r\n        change = true;\r\n      }\r\n\r\n      if(change) this.setState(state);\r\n\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      playerName, characterName, subjectiveAge, \r\n      objectiveAge, sleeve, background, faction\r\n    } = this.staticData;\r\n    const formMap = {\r\n      one: {label: 'Step One', type: 'header'},\r\n      playerName: playerName,\r\n      characterName: characterName,\r\n      subjectiveAge: subjectiveAge,\r\n      objectiveAge: objectiveAge,\r\n      two: {label: 'Step Two', type: 'header'},\r\n      background: background,\r\n      three: {label: 'Step Three', type: 'header'},\r\n      faction: faction,\r\n      four: {label: 'Step Four', type: 'header'},\r\n      aptitudes: {type: 'aptitudes', cp: 105},\r\n      five: {label: 'Step Five', type: 'header'},\r\n      skillsActive: {type: 'skills', cp: 400, list: skillArrayByTag('Active')},\r\n      six: {label: 'Step Six', type: 'header'},\r\n      skillsKnowledge: {type: 'skills', cp: 300, list: skillArrayByTag('Knowledge')},\r\n      seven: {label: 'Step Seven', type: 'header'},\r\n      sleeve: sleeve\r\n    }\r\n    return(\r\n      <>\r\n        {Object.keys(formMap).map( (key, index) => {\r\n          const item = formMap[key];\r\n          if (item.type === 'text') {\r\n            return (\r\n              <SimpleField\r\n                type={item.type}\r\n                label={item.label}\r\n                value={this.state[key]}\r\n                onChange={event => this.handleInputChange(event, key)}\r\n                key={[item.type, key].join('_')}\r\n              />\r\n            )\r\n          } else if (item.type === 'dropDown') {\r\n            return (\r\n              <SimpleDropDown\r\n                label={item.label}\r\n                options={item.options}\r\n                value={this.state[key]}\r\n                onChange={event => this.handleInputChange(event, key)}                \r\n                key={[item.type, key].join('_')}\r\n              />\r\n            )\r\n          } else if (item.type === 'background') {\r\n            return (\r\n              <Background\r\n                onSelection={this.handleBackground}\r\n                form={this.staticData.background}\r\n                dataStatic={this.staticData}\r\n                key={['overComp', key, index].join('_')}\r\n              />\r\n            )\r\n          } else if (item.type === 'faction') {\r\n            return (\r\n              <Background\r\n                onSelection={this.handleFaction}\r\n                form={this.staticData.faction}\r\n                dataStatic={this.staticData}\r\n              />\r\n            )\r\n          } else if (item.type === 'header') {\r\n            return <h1 className='Char-Builder_Header' key={`header_${key}`}>{item.label}</h1>\r\n          } else if (item.type === 'aptitudes') {\r\n            return (\r\n              <>\r\n                <Counter pontsSpent={this.state.cp.aptitudes} pontsTotal={item.cp} />\r\n                <Aptitudes\r\n                  spendPoints={this.handleCP}\r\n                  dataDynmic={this.state}\r\n                  dataStatic={this.staticData}\r\n                  handleChange={(event, keyOne, keyTwo ) => this.handleInputChange(event, 'aptitudes', keyOne, keyTwo)}\r\n                />\r\n              </>\r\n            )\r\n          } else if (item.type === 'skills') {\r\n            return (\r\n              <>\r\n                <Counter pontsSpent={this.state.cp[key]} pontsTotal={item.cp} />\r\n                <Skills\r\n                  skillList={item.list}\r\n                  spendPoints={ (points) => this.handleCP(points, key)}\r\n                  dataDynmic={this.state}\r\n                  dataStatic={this.staticData}\r\n                  handleChange={(event, skill, subSkill) => {\r\n                    this.handleInputChange(event, 'skills', skill, subSkill)\r\n                  }}\r\n                  handleNewSubSkill={this.handleNewSubSkill}\r\n                />\r\n              </>\r\n            )\r\n          } else {\r\n            return <p>Failed to render element</p>\r\n          }\r\n        })}\r\n        <br/>        \r\n        <br/>\r\n        <button onClick={()=>{\r\n          console.log(this.state);\r\n        }}>Report</button>\r\n        <br/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CharacterSheet;","import './App.css';\nimport React,{Component} from 'react';\nimport CharacterSheet from './components/CharacterSheet.jsx';\n\nclass App extends Component {\n  constructor(params){\n    super(params)\n    this.pages = [\n      'characterSheet',\n      'characerOverView',\n      'DMView'\n    ];\n    this.state = {page: this.pages[0]};\n  }\n\n  render(){\n    return(\n      <>\n        <CharacterSheet/>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}